[
    {
        "requestType": "REST",
        "method": "POST",
        "resource": "graphql",
        "availableParams": [
            {
                "parameterType": "HEADER_PARAM",
                "value": "application/json",
                "key": "contentType"
            },
            {
                "parameterType": "STORAGE_PARAM",
                "value": "data.createAuthor.id",
                "key": "id"
            },
            {
                "parameterType": "ADDIFY_PARAM",
                "value": "suki",
                "key": "name"
            },
            {
                "parameterType": "ADDIFY_PARAM",
                "value": "13",
                "key": "age"
            }
        ],
        "url": "/apis/graphql",
        "tags": "@graphql",
        "outputFields": {"data.createAuthor.name": "[name]"},
        "input": "{\"query\":\"mutation {\\n createAuthor(\\n name: \\\"[name]\\\",\\n age: [age]) {\\n id name\\n }\\n}\",\"variables\":{\n\"name\": \"\",\n\"age\": 0\n}}",
        "scenario": "Create user with Graphql",
        "csvson": [
            "data.createAuthor/name",
            "[name]"
        ],
        "contentType": "application/json",
        "scenarioId": "Create-User-using-Graphql",
        "httpStatusCode": "200"
    },
    {
        "requestType": "REST",
        "method": "POST",
        "resource": "graphql",
        "availableParams": [
            {
                "parameterType": "HEADER_PARAM",
                "value": "application/json",
                "key": "contentType"
            },
            {
                "parameterType": "STORAGE_PARAM",
                "value": "data.createAuthor.id",
                "key": "id2"
            },
            {
                "parameterType": "ADDIFY_PARAM",
                "value": "sri",
                "key": "name2"
            },
            {
                "parameterType": "ADDIFY_PARAM",
                "value": "8",
                "key": "age2"
            }
        ],
        "url": "/apis/graphql",
        "tags": "@graphql",
        "outputFields": {"data.createAuthor.name": "[name2]"},
        "input": "{\"query\":\"mutation {\\n createAuthor(\\n name: \\\"[name2]\\\",\\n age: [age2]) {\\n id name\\n }\\n}\",\"variables\":{\n\"name\": \"\",\n\"age\": 0\n}}",
        "scenario": "Create another user with Graphql",
        "csvson": [
            "data.createAuthor/name",
            "[name2]"
        ],
        "contentType": "application/json",
        "scenarioId": "Create-AnotherUser-using-Graphql",
        "httpStatusCode": "200"
    },
    {
        "input": "{\"query\":\"query findAllAuthors {\\n findAllAuthors {\\n id\\n name\\n age\\n }\\n}\",\"variables\":{}}",
        "requestType": "REST",
        "method": "POST",
        "scenario": "Read user - using graphql",
        "resource": "graphql",
        "csvson": [
            "jsonpath=data.findAllAuthors",
            "id,name,age",
            "[id],[name], i~13",
            "[id2],[name2], i~8"
        ],
        "availableParams": [{
            "parameterType": "HEADER_PARAM",
            "value": "application/json",
            "key": "contentType"
        }],
        "contentType": "application/json",
        "scenarioId": "Read-Graphql-user",
        "url": "/apis/graphql",
        "httpStatusCode": "200"
    }
]